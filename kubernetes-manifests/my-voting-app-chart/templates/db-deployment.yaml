apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-voting-app.fullname" . }}-db
  labels:
    {{- include "my-voting-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: db
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "my-voting-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: db
  template:
    metadata:
      labels:
        {{- include "my-voting-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: db
    spec:
      containers:
        - name: db
          image: "postgres:15-alpine"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "my-voting-app.fullname" . }}-db-secret
          volumeMounts:
            - name: db-persistent-storage
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "{{ .Values.database.user }}"]
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "{{ .Values.database.user }}"]
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 3
      volumes:
        - name: db-persistent-storage
          persistentVolumeClaim:
            claimName: {{ include "my-voting-app.fullname" . }}-db-pvc
